apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        {{- if eq .Values.image.tag "latest"}}
        image: "{{ .Values.image.name}}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
        {{- else}}
        image: "{{ .Values.image.devRepo }}/{{ .Chart.Name }}:{{ .Values.image.tag }}"
        {{- end}}
        imagePullPolicy: Always
        ports:
        - name: http-server
          containerPort: 8080
        resources:
          limits:
            cpu: "100m"
            memory: "200Mi"
          requests:
            cpu: "50m"
            memory: "100Mi"
        env:
        - name: JSON_SECRET_KEYS
          valueFrom:
            secretKeyRef:
              name: mock-eq
              key: mock-eq
        - name: GOOGLE_CLOUD_PROJECT
          value: "{{ .Values.gcp.project }}"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/credentials.json
        - name: PUBSUB_TOPIC
          value: "{{ .Values.gcp.topic }}"
      # readinessProbe:
      #   httpGet:
      #       path: /info
      #       port: 8080
      #     initialDelaySeconds: 1
      #     periodSeconds: 20
      #     failureThreshold: 5
      #     successThreshold: 1
      #     timeoutSeconds: 5
      # livenessProbe:
      #     path: /info
      #     port: 8080
      #   initialDelaySeconds: 1
      #   periodSeconds: 20
      #   failureThreshold: 5
      #   successThreshold: 1
      #   timeoutSeconds: 5
